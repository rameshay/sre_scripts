#!/usr/bin/env python3
import ipaddress


def get_whitelisted_ipaddr():
    '''
    Method that will return an ip address from the
    set of ranges.
    '''
    ip_ranges = [
        '52.63.36.115',
        '52.63.36.231',
        '52.64.10.98',
        '52.64.14.87',
        '52.64.77.31',
        '52.64.114.198',
        '54.66.195.72/29',
        '18.228.1.160/27',
        '35.183.38.96/27',
        '34.241.197.0/27',
        '52.17.43.70',
        '52.17.143.191',
        '52.17.143.191',
        '54.154.127.248/29',
        '54.169.103.213',
        '54.169.128.115',
        '54.169.130.27',
        '54.169.191.160/27',
        '34.192.8.160',
        '34.192.9.173',
        '34.192.82.31',
        '34.194.216.44',
        '34.197.170.207',
        '34.199.45.143',
        '34.226.36.128/27',
        '34.238.188.64/26',
        '54.210.63.224/28',
        '13.56.24.0/26',
        '54.193.89.248',
        '54.193.89.250',
        '54.193.90.141',
        '54.193.91.15',
        '54.241.190.144/28',
    ]
    for network in ip_ranges:
        if '/' in network:
            ipv4_nw = ipaddress.IPv4Network(network, strict=True)
            for ip_addr in ipv4_nw.hosts():
                yield ip_addr
        else:
            yield network

if __name__ == "__main__":
    for addr in get_whitelisted_ipaddr():
        print(addr)

'''
Date:        Revision : Comment
20 June 2018  1.9        Add Brazil, remove deprecated addresses
The raw Data
Australia
52.63.36.115
52.63.36.231
52.64.10.98
52.64.14.87
52.64.77.31
52.64.114.198
54.66.195.72/29
Brazil
18.228.1.160/27
Canada
35.183.38.96/27
Europe
34.241.197.0/27
52.17.43.70
52.17.143.191
54.154.127.248/29
Singapore
54.169.103.213
54.169.128.115
54.169.130.27
54.169.191.160/27
US East
34.192.8.160
34.192.9.173
34.192.82.31
34.194.216.44
34.197.170.207
34.199.45.143
34.226.36.128/27
34.238.188.64/26
54.210.63.224/28
US West
13.56.24.0/26
54.193.89.248
54.193.89.250
54.193.90.141
54.193.91.15
54.241.190.144/28
'''